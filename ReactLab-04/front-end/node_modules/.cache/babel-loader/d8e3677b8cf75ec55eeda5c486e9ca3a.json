{"ast":null,"code":"'use strict';\n\nvar xtend = require('xtend');\n\nvar defaults = require('./github.json');\n\nmodule.exports = wrapper;\nvar own = {}.hasOwnProperty;\nvar push = [].push;\nvar nodeSchema = {\n  root: {\n    children: all\n  },\n  doctype: handleDoctype,\n  comment: handleComment,\n  element: {\n    tagName: handleTagName,\n    properties: handleProperties,\n    children: all\n  },\n  text: {\n    value: handleValue\n  },\n  '*': {\n    data: allow,\n    position: allow\n  }\n}; // Sanitize `node`, according to `schema`.\n\nfunction wrapper(node, schema) {\n  var ctx = {\n    type: 'root',\n    children: []\n  };\n  var replace;\n\n  if (node && typeof node === 'object' && node.type) {\n    replace = one(xtend(defaults, schema || {}), node, []);\n\n    if (replace) {\n      if ('length' in replace) {\n        if (replace.length === 1) {\n          ctx = replace[0];\n        } else {\n          ctx.children = replace;\n        }\n      } else {\n        ctx = replace;\n      }\n    }\n  }\n\n  return ctx;\n} // Sanitize `node`.\n\n\nfunction one(schema, node, stack) {\n  var type = node && node.type;\n  var replacement = {\n    type: node.type\n  };\n  var replace;\n  var definition;\n  var allowed;\n  var result;\n  var key;\n\n  if (own.call(nodeSchema, type)) {\n    definition = nodeSchema[type];\n\n    if (typeof definition === 'function') {\n      definition = definition(schema, node);\n    }\n\n    if (definition) {\n      replace = true;\n      allowed = xtend(definition, nodeSchema['*']);\n\n      for (key in allowed) {\n        result = allowed[key](schema, node[key], node, stack);\n\n        if (result === false) {\n          replace = null; // Set the non-safe value.\n\n          replacement[key] = node[key];\n        } else if (result != null) {\n          replacement[key] = result;\n        }\n      }\n    }\n  }\n\n  if (replace) {\n    return replacement;\n  }\n\n  return replacement.children && replacement.children.length && schema.strip.indexOf(replacement.tagName) < 0 ? replacement.children : null;\n} // Sanitize `children`.\n\n\nfunction all(schema, children, node, stack) {\n  var results = [];\n  var index = -1;\n  var value;\n\n  if (children) {\n    stack.push(node.tagName);\n\n    while (++index < children.length) {\n      value = one(schema, children[index], stack);\n\n      if (value) {\n        if ('length' in value) {\n          push.apply(results, value);\n        } else {\n          results.push(value);\n        }\n      }\n    }\n\n    stack.pop();\n  }\n\n  return results;\n} // Sanitize `properties`.\n\n\nfunction handleProperties(schema, properties, node, stack) {\n  var name = handleTagName(schema, node.tagName, node, stack);\n  var reqs = schema.required ||\n  /* istanbul ignore next */\n  {};\n  var props = properties || {};\n  var allowed = xtend(toPropertyValueMap(schema.attributes['*']), toPropertyValueMap(own.call(schema.attributes, name) ? schema.attributes[name] : []));\n  var result = {};\n  var definition;\n  var key;\n  var value;\n\n  for (key in props) {\n    if (own.call(allowed, key)) {\n      definition = allowed[key];\n    } else if (data(key) && own.call(allowed, 'data*')) {\n      definition = allowed['data*'];\n    } else {\n      continue;\n    }\n\n    value = props[key];\n    value = value && typeof value === 'object' && 'length' in value ? handlePropertyValues(schema, value, key, definition) : handlePropertyValue(schema, value, key, definition);\n\n    if (value != null) {\n      result[key] = value;\n    }\n  }\n\n  if (own.call(reqs, name)) {\n    for (key in reqs[name]) {\n      if (!own.call(result, key)) {\n        result[key] = reqs[name][key];\n      }\n    }\n  }\n\n  return result;\n} // Sanitize a property value which is a list.\n\n\nfunction handlePropertyValues(schema, values, prop, definition) {\n  var result = [];\n  var index = -1;\n  var value;\n\n  while (++index < values.length) {\n    value = handlePropertyValue(schema, values[index], prop, definition);\n\n    if (value != null) {\n      result.push(value);\n    }\n  }\n\n  return result;\n} // Sanitize a property value.\n\n\nfunction handlePropertyValue(schema, value, prop, definition) {\n  if ((typeof value === 'boolean' || typeof value === 'number' || typeof value === 'string') && handleProtocol(schema, value, prop) && (!definition.length || definition.indexOf(value) > -1)) {\n    return schema.clobber.indexOf(prop) < 0 ? value : schema.clobberPrefix + value;\n  }\n} // Check whether `value` is a safe URL.\n\n\nfunction handleProtocol(schema, value, prop) {\n  var url = String(value);\n  var colon = url.indexOf(':');\n  var questionMark = url.indexOf('?');\n  var numberSign = url.indexOf('#');\n  var slash = url.indexOf('/');\n  var protocols = own.call(schema.protocols, prop) ? schema.protocols[prop].concat() : [];\n  var index = -1;\n\n  if (!protocols.length || colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n  slash > -1 && colon > slash || questionMark > -1 && colon > questionMark || numberSign > -1 && colon > numberSign) {\n    return true;\n  }\n\n  while (++index < protocols.length) {\n    if (colon === protocols[index].length && url.slice(0, protocols[index].length) === protocols[index]) {\n      return true;\n    }\n  }\n\n  return false;\n} // Always return a valid HTML5 doctype.\n\n\nfunction handleDoctypeName() {\n  return 'html';\n} // Sanitize `tagName`.\n\n\nfunction handleTagName(schema, tagName, node, stack) {\n  var name = typeof tagName === 'string' && tagName;\n  var index = -1;\n\n  if (!name || name === '*' || schema.tagNames.indexOf(name) < 0) {\n    return false;\n  } // Some nodes can break out of their context if they don’t have a certain\n  // ancestor.\n\n\n  if (own.call(schema.ancestors, name)) {\n    while (++index <= schema.ancestors[name].length) {\n      if (stack.indexOf(schema.ancestors[name][index]) > -1) {\n        return name;\n      }\n    }\n\n    return false;\n  }\n\n  return name;\n}\n\nfunction handleDoctype(schema) {\n  return schema.allowDoctypes ? {\n    name: handleDoctypeName\n  } : null;\n}\n\nfunction handleComment(schema) {\n  return schema.allowComments ? {\n    value: handleCommentValue\n  } : null;\n} // See <https://html.spec.whatwg.org/multipage/parsing.html#serialising-html-fragments>\n\n\nfunction handleCommentValue(schema, value) {\n  var result = typeof value === 'string' ? value : '';\n  var index = result.indexOf('-->');\n  return index < 0 ? result : result.slice(0, index);\n} // Sanitize `value`.\n\n\nfunction handleValue(schema, value) {\n  return typeof value === 'string' ? value : '';\n} // Create a map from a list of props or a list of properties and values.\n\n\nfunction toPropertyValueMap(values) {\n  var result = {};\n  var index = -1;\n  var value;\n\n  while (++index < values.length) {\n    value = values[index];\n\n    if (value && typeof value === 'object' && 'length' in value) {\n      result[value[0]] = value.slice(1);\n    } else {\n      result[value] = [];\n    }\n  }\n\n  return result;\n} // Allow `value`.\n\n\nfunction allow(schema, value) {\n  return value;\n} // Check if `prop` is a data property.\n\n\nfunction data(prop) {\n  return prop.length > 4 && prop.slice(0, 4).toLowerCase() === 'data';\n}","map":{"version":3,"sources":["/home/hugo/github/Web-Server-Nodejs/Web-Server-Nodejs/ReactLab-04/front-end/node_modules/hast-util-sanitize/lib/index.js"],"names":["xtend","require","defaults","module","exports","wrapper","own","hasOwnProperty","push","nodeSchema","root","children","all","doctype","handleDoctype","comment","handleComment","element","tagName","handleTagName","properties","handleProperties","text","value","handleValue","data","allow","position","node","schema","ctx","type","replace","one","length","stack","replacement","definition","allowed","result","key","call","strip","indexOf","results","index","apply","pop","name","reqs","required","props","toPropertyValueMap","attributes","handlePropertyValues","handlePropertyValue","values","prop","handleProtocol","clobber","clobberPrefix","url","String","colon","questionMark","numberSign","slash","protocols","concat","slice","handleDoctypeName","tagNames","ancestors","allowDoctypes","allowComments","handleCommentValue","toLowerCase"],"mappings":"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","sourcesContent":["'use strict'\n\nvar xtend = require('xtend')\nvar defaults = require('./github.json')\n\nmodule.exports = wrapper\n\nvar own = {}.hasOwnProperty\nvar push = [].push\n\nvar nodeSchema = {\n  root: {children: all},\n  doctype: handleDoctype,\n  comment: handleComment,\n  element: {\n    tagName: handleTagName,\n    properties: handleProperties,\n    children: all\n  },\n  text: {value: handleValue},\n  '*': {data: allow, position: allow}\n}\n\n// Sanitize `node`, according to `schema`.\nfunction wrapper(node, schema) {\n  var ctx = {type: 'root', children: []}\n  var replace\n\n  if (node && typeof node === 'object' && node.type) {\n    replace = one(xtend(defaults, schema || {}), node, [])\n\n    if (replace) {\n      if ('length' in replace) {\n        if (replace.length === 1) {\n          ctx = replace[0]\n        } else {\n          ctx.children = replace\n        }\n      } else {\n        ctx = replace\n      }\n    }\n  }\n\n  return ctx\n}\n\n// Sanitize `node`.\nfunction one(schema, node, stack) {\n  var type = node && node.type\n  var replacement = {type: node.type}\n  var replace\n  var definition\n  var allowed\n  var result\n  var key\n\n  if (own.call(nodeSchema, type)) {\n    definition = nodeSchema[type]\n\n    if (typeof definition === 'function') {\n      definition = definition(schema, node)\n    }\n\n    if (definition) {\n      replace = true\n      allowed = xtend(definition, nodeSchema['*'])\n\n      for (key in allowed) {\n        result = allowed[key](schema, node[key], node, stack)\n\n        if (result === false) {\n          replace = null\n          // Set the non-safe value.\n          replacement[key] = node[key]\n        } else if (result != null) {\n          replacement[key] = result\n        }\n      }\n    }\n  }\n\n  if (replace) {\n    return replacement\n  }\n\n  return replacement.children &&\n    replacement.children.length &&\n    schema.strip.indexOf(replacement.tagName) < 0\n    ? replacement.children\n    : null\n}\n\n// Sanitize `children`.\nfunction all(schema, children, node, stack) {\n  var results = []\n  var index = -1\n  var value\n\n  if (children) {\n    stack.push(node.tagName)\n\n    while (++index < children.length) {\n      value = one(schema, children[index], stack)\n\n      if (value) {\n        if ('length' in value) {\n          push.apply(results, value)\n        } else {\n          results.push(value)\n        }\n      }\n    }\n\n    stack.pop()\n  }\n\n  return results\n}\n\n// Sanitize `properties`.\nfunction handleProperties(schema, properties, node, stack) {\n  var name = handleTagName(schema, node.tagName, node, stack)\n  var reqs = schema.required || /* istanbul ignore next */ {}\n  var props = properties || {}\n  var allowed = xtend(\n    toPropertyValueMap(schema.attributes['*']),\n    toPropertyValueMap(\n      own.call(schema.attributes, name) ? schema.attributes[name] : []\n    )\n  )\n  var result = {}\n  var definition\n  var key\n  var value\n\n  for (key in props) {\n    if (own.call(allowed, key)) {\n      definition = allowed[key]\n    } else if (data(key) && own.call(allowed, 'data*')) {\n      definition = allowed['data*']\n    } else {\n      continue\n    }\n\n    value = props[key]\n    value =\n      value && typeof value === 'object' && 'length' in value\n        ? handlePropertyValues(schema, value, key, definition)\n        : handlePropertyValue(schema, value, key, definition)\n\n    if (value != null) {\n      result[key] = value\n    }\n  }\n\n  if (own.call(reqs, name)) {\n    for (key in reqs[name]) {\n      if (!own.call(result, key)) {\n        result[key] = reqs[name][key]\n      }\n    }\n  }\n\n  return result\n}\n\n// Sanitize a property value which is a list.\nfunction handlePropertyValues(schema, values, prop, definition) {\n  var result = []\n  var index = -1\n  var value\n\n  while (++index < values.length) {\n    value = handlePropertyValue(schema, values[index], prop, definition)\n\n    if (value != null) {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n// Sanitize a property value.\nfunction handlePropertyValue(schema, value, prop, definition) {\n  if (\n    (typeof value === 'boolean' ||\n      typeof value === 'number' ||\n      typeof value === 'string') &&\n    handleProtocol(schema, value, prop) &&\n    (!definition.length || definition.indexOf(value) > -1)\n  ) {\n    return schema.clobber.indexOf(prop) < 0\n      ? value\n      : schema.clobberPrefix + value\n  }\n}\n\n// Check whether `value` is a safe URL.\nfunction handleProtocol(schema, value, prop) {\n  var url = String(value)\n  var colon = url.indexOf(':')\n  var questionMark = url.indexOf('?')\n  var numberSign = url.indexOf('#')\n  var slash = url.indexOf('/')\n  var protocols = own.call(schema.protocols, prop)\n    ? schema.protocols[prop].concat()\n    : []\n  var index = -1\n\n  if (\n    !protocols.length ||\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign)\n  ) {\n    return true\n  }\n\n  while (++index < protocols.length) {\n    if (\n      colon === protocols[index].length &&\n      url.slice(0, protocols[index].length) === protocols[index]\n    ) {\n      return true\n    }\n  }\n\n  return false\n}\n\n// Always return a valid HTML5 doctype.\nfunction handleDoctypeName() {\n  return 'html'\n}\n\n// Sanitize `tagName`.\nfunction handleTagName(schema, tagName, node, stack) {\n  var name = typeof tagName === 'string' && tagName\n  var index = -1\n\n  if (!name || name === '*' || schema.tagNames.indexOf(name) < 0) {\n    return false\n  }\n\n  // Some nodes can break out of their context if they don’t have a certain\n  // ancestor.\n  if (own.call(schema.ancestors, name)) {\n    while (++index <= schema.ancestors[name].length) {\n      if (stack.indexOf(schema.ancestors[name][index]) > -1) {\n        return name\n      }\n    }\n\n    return false\n  }\n\n  return name\n}\n\nfunction handleDoctype(schema) {\n  return schema.allowDoctypes ? {name: handleDoctypeName} : null\n}\n\nfunction handleComment(schema) {\n  return schema.allowComments ? {value: handleCommentValue} : null\n}\n\n// See <https://html.spec.whatwg.org/multipage/parsing.html#serialising-html-fragments>\nfunction handleCommentValue(schema, value) {\n  var result = typeof value === 'string' ? value : ''\n  var index = result.indexOf('-->')\n\n  return index < 0 ? result : result.slice(0, index)\n}\n\n// Sanitize `value`.\nfunction handleValue(schema, value) {\n  return typeof value === 'string' ? value : ''\n}\n\n// Create a map from a list of props or a list of properties and values.\nfunction toPropertyValueMap(values) {\n  var result = {}\n  var index = -1\n  var value\n\n  while (++index < values.length) {\n    value = values[index]\n\n    if (value && typeof value === 'object' && 'length' in value) {\n      result[value[0]] = value.slice(1)\n    } else {\n      result[value] = []\n    }\n  }\n\n  return result\n}\n\n// Allow `value`.\nfunction allow(schema, value) {\n  return value\n}\n\n// Check if `prop` is a data property.\nfunction data(prop) {\n  return prop.length > 4 && prop.slice(0, 4).toLowerCase() === 'data'\n}\n"]},"metadata":{},"sourceType":"script"}