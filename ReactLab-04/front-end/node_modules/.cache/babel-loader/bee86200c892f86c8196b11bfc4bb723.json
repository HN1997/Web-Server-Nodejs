{"ast":null,"code":"var _jsxFileName = \"/home/hugo/github/Web-Server-Nodejs/Web-Server-Nodejs/ReactLab-04/front-end/src/components/Messages/Messages.js\";\nimport './Messages.css';\nimport React from 'react'; //For transforming markdown to html\n\nimport unified from 'unified';\nimport parse from 'remark-parse';\nimport remark2react from 'remark-react'; //Moment.js library - deprecated\n//it's slow\n//it's heavey\n//it's mutable ?\n//it's hard to debug\n//uncomment the following to use moment\n\n/*\nconst moment = require('moment');\nlet val;\nval = moment().format('h:mm, DD-MM-YYYY');\n*/\n//using Luxon instead of Moment.js\n\nconst {\n  DateTime\n} = require('luxon');\n\nconst Messages = ({\n  channel\n}) => {\n  let today = DateTime.local();\n  let day = today.get('day');\n  let month = today.get('month');\n  let year = today.get('year');\n  let hour = today.get('hour');\n  let minute = today.get('minute'); //A text in markdown\n\n  const someText = \"# Hello world!\";\n  const someText2 = \"*Try markdown with stars before and after your message*\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Connected in the channel: \", channel.name), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Some text in markdown:\", unified().use(parse).use(remark2react).processSync(someText).result, unified().use(parse).use(remark2react).processSync(someText2).result), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, messages.map((message, i) => /*#__PURE__*/React.createElement(\"li\", {\n    key: i,\n    className: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }, message.author), ' ', /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, \"(sent a message at \", hour, \":\", minute, \", \", day, \"/\", month, \"/\", year, \"):\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, unified().use(parse).use(remark2react).processSync(message.content).result)))));\n};\n\nexport default Messages;","map":{"version":3,"sources":["/home/hugo/github/Web-Server-Nodejs/Web-Server-Nodejs/ReactLab-04/front-end/src/components/Messages/Messages.js"],"names":["React","unified","parse","remark2react","DateTime","require","Messages","channel","today","local","day","get","month","year","hour","minute","someText","someText2","name","use","processSync","result","messages","map","message","i","author","content"],"mappings":";AAAA,OAAO,gBAAP;AAEA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,YAAP,MAAyB,cAAzB,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,MAAM;AAACC,EAAAA;AAAD,IAAaC,OAAO,CAAC,OAAD,CAA1B;;AAKA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAE5B,MAAIC,KAAK,GAAGJ,QAAQ,CAACK,KAAT,EAAZ;AACA,MAAIC,GAAG,GAAEF,KAAK,CAACG,GAAN,CAAU,KAAV,CAAT;AACA,MAAIC,KAAK,GAAGJ,KAAK,CAACG,GAAN,CAAU,OAAV,CAAZ;AACA,MAAIE,IAAI,GAAGL,KAAK,CAACG,GAAN,CAAU,MAAV,CAAX;AACA,MAAIG,IAAI,GAAGN,KAAK,CAACG,GAAN,CAAU,MAAV,CAAX;AACA,MAAII,MAAM,GAAGP,KAAK,CAACG,GAAN,CAAU,QAAV,CAAb,CAP4B,CAS1B;;AACF,QAAMK,QAAQ,GAAG,gBAAjB;AACA,QAAMC,SAAS,GAAG,yDAAlB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAA8CV,OAAO,CAACW,IAAtD,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAGQjB,OAAO,GACNkB,GADD,CACKjB,KADL,EAECiB,GAFD,CAEKhB,YAFL,EAGCiB,WAHD,CAGaJ,QAHb,EAGuBK,MAN/B,EASQpB,OAAO,GACNkB,GADD,CACKjB,KADL,EAECiB,GAFD,CAEKhB,YAFL,EAGCiB,WAHD,CAGaH,SAHb,EAGwBI,MAZhC,CAFJ,eAkBI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMC,QAAQ,CAACC,GAAT,CAAc,CAACC,OAAD,EAAUC,CAAV,kBACZ;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAY,IAAA,SAAS,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,OAAO,CAACE,MAAf,CADJ,EAEK,GAFL,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA0BZ,IAA1B,OAAiCC,MAAjC,QAA2CL,GAA3C,OAAiDE,KAAjD,OAAyDC,IAAzD,OAHJ,CADJ,eAMI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIZ,OAAO,GACNkB,GADD,CACKjB,KADL,EAECiB,GAFD,CAEKhB,YAFL,EAGCiB,WAHD,CAGaI,OAAO,CAACG,OAHrB,EAG8BN,MALlC,CANJ,CADF,CADN,CAlBJ,CADJ;AAyCH,CAtDD;;AAwDA,eAAef,QAAf","sourcesContent":["import './Messages.css';\n\nimport React from 'react';\n\n//For transforming markdown to html\nimport unified from 'unified'\nimport parse from 'remark-parse'\nimport remark2react from 'remark-react'\n\n//Moment.js library - deprecated\n//it's slow\n//it's heavey\n//it's mutable ?\n//it's hard to debug\n//uncomment the following to use moment\n/*\nconst moment = require('moment');\nlet val;\nval = moment().format('h:mm, DD-MM-YYYY');\n*/\n\n//using Luxon instead of Moment.js\nconst {DateTime} = require('luxon');\n\n\n\n\nconst Messages = ({channel}) => {\n\n    let today = DateTime.local();\n    let day =today.get('day');\n    let month = today.get('month');\n    let year = today.get('year');\n    let hour = today.get('hour');\n    let minute = today.get('minute');\n\n      //A text in markdown\n    const someText = \"# Hello world!\";\n    const someText2 = \"*Try markdown with stars before and after your message*\"\n\n    return(\n        <div className=\"messages\">\n            <h1 align=\"center\">Connected in the channel: {channel.name}</h1>\n            <div>\n                Some text in markdown:\n                {\n                    unified()\n                    .use(parse)\n                    .use(remark2react)\n                    .processSync(someText).result\n                }\n                {\n                    unified()\n                    .use(parse)\n                    .use(remark2react)\n                    .processSync(someText2).result\n                }\n            </div>\n\n            <div className=\"chatMessage\">\n                { messages.map( (message, i) => (\n                    <li key={i} className=\"message\">\n                        <p>\n                            <span>{message.author}</span>\n                            {' '}\n                            <span>(sent a message at {hour}:{minute}, {day}/{month}/{year}):</span>\n                        </p>\n                        <div className=\"chatMessage\">\n                        {\n                            unified()\n                            .use(parse)\n                            .use(remark2react)\n                            .processSync(message.content).result\n                        }\n                        </div>\n                    </li>\n                ))}\n            </div>\n                    \n        </div>\n    );\n}\n\nexport default Messages;"]},"metadata":{},"sourceType":"module"}