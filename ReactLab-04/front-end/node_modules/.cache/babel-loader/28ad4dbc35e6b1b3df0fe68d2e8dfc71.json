{"ast":null,"code":"var _jsxFileName = \"/home/hugo/github/Web-Server-Nodejs/Web-Server-Nodejs/ReactLab-04/front-end/src/components/Main/Main.js\";\nimport React from 'react'; //For transforming markdown to html\n\nimport unified from 'unified';\nimport parse from 'remark-parse';\nimport remark2react from 'remark-react';\nimport './Main.css';\n\nconst Main = () => {\n  var channel = {\n    name: 'Fake channel'\n  }; //A text in markdown\n\n  const someText = \"# Hello world!\";\n  const someText2 = \"*Try markdown with stars before and after your message*\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"channels\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, \"List of the channels:\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 29\n    }\n  }, channel.name)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"channel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, \"Connected in the channel: \", channel.name), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"Some text in markdown:\", unified().use(parse).use(remark2react).processSync(someText).result, unified().use(parse).use(remark2react).processSync(someText2).result), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, messages.map((message, i) => /*#__PURE__*/React.createElement(\"li\", {\n    key: i,\n    css: styles.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 37\n    }\n  }, message.author), ' ', /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 37\n    }\n  }, \"(sent a message at \", hour, \":\", minute, \", \", day, \"/\", month, \"/\", year, \"):\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 33\n    }\n  }, unified().use(parse).use(remark2react).processSync(message.content).result)))))));\n};\n\nexport default Main;","map":{"version":3,"sources":["/home/hugo/github/Web-Server-Nodejs/Web-Server-Nodejs/ReactLab-04/front-end/src/components/Main/Main.js"],"names":["React","unified","parse","remark2react","Main","channel","name","someText","someText2","use","processSync","result","messages","map","message","i","styles","author","hour","minute","day","month","year","content"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AAEA,OAAO,YAAP;;AAGA,MAAMC,IAAI,GAAG,MAAM;AACf,MAAIC,OAAO,GAAG;AACVC,IAAAA,IAAI,EAAE;AADI,GAAd,CADe,CAKb;;AACF,QAAMC,QAAQ,GAAG,gBAAjB;AACA,QAAMC,SAAS,GAAG,yDAAlB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCH,OAAO,CAACC,IADT,CADJ,CADJ,CAFR,CAFJ,eAaI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAA8CD,OAAO,CAACC,IAAtD,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAGQL,OAAO,GACNQ,GADD,CACKP,KADL,EAECO,GAFD,CAEKN,YAFL,EAGCO,WAHD,CAGaH,QAHb,EAGuBI,MAN/B,EASQV,OAAO,GACNQ,GADD,CACKP,KADL,EAECO,GAFD,CAEKN,YAFL,EAGCO,WAHD,CAGaF,SAHb,EAGwBG,MAZhC,CAFJ,eAiBI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMC,QAAQ,CAACC,GAAT,CAAc,CAACC,OAAD,EAAUC,CAAV,kBACZ;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAY,IAAA,GAAG,EAAEC,MAAM,CAACF,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,OAAO,CAACG,MAAf,CADJ,EAEK,GAFL,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA0BC,IAA1B,OAAiCC,MAAjC,QAA2CC,GAA3C,OAAiDC,KAAjD,OAAyDC,IAAzD,OAHJ,CADJ,eAMI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIrB,OAAO,GACNQ,GADD,CACKP,KADL,EAECO,GAFD,CAEKN,YAFL,EAGCO,WAHD,CAGaI,OAAO,CAACS,OAHrB,EAG8BZ,MALlC,CANJ,CADF,CADN,CAjBJ,CADJ,CAbJ,CADJ;AAwDH,CAjED;;AAkEA,eAAeP,IAAf","sourcesContent":["import React from 'react';\n//For transforming markdown to html\nimport unified from 'unified'\nimport parse from 'remark-parse'\nimport remark2react from 'remark-react'\n\nimport './Main.css';\n\n\nconst Main = () => {\n    var channel = {\n        name: 'Fake channel',\n    }\n\n      //A text in markdown\n    const someText = \"# Hello world!\";\n    const someText2 = \"*Try markdown with stars before and after your message*\"\n\n    return(\n        <div className=\"main\">\n\n            <div className=\"channels\">\n                <h5 align=\"center\">List of the channels:</h5>\n                    <div>\n                        <ul>\n                            <li>\n                            {channel.name}\n                            </li>\n                        </ul>\n                    </div>\n            </div>\n\n            <div className=\"channel\">\n                <div className=\"messages\">\n                    <h1 align=\"center\">Connected in the channel: {channel.name}</h1>\n                    <div>\n                        Some text in markdown:\n                        {\n                            unified()\n                            .use(parse)\n                            .use(remark2react)\n                            .processSync(someText).result\n                        }\n                        {\n                            unified()\n                            .use(parse)\n                            .use(remark2react)\n                            .processSync(someText2).result\n                        }\n                    </div>\n                    <div className=\"chatMessage\">\n                        { messages.map( (message, i) => (\n                            <li key={i} css={styles.message}>\n                                <p>\n                                    <span>{message.author}</span>\n                                    {' '}\n                                    <span>(sent a message at {hour}:{minute}, {day}/{month}/{year}):</span>\n                                </p>\n                                <div className=\"chatMessage\">\n                                {\n                                    unified()\n                                    .use(parse)\n                                    .use(remark2react)\n                                    .processSync(message.content).result\n                                }\n                                </div>\n                            </li>\n                        ))}\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    );\n}\nexport default Main;"]},"metadata":{},"sourceType":"module"}