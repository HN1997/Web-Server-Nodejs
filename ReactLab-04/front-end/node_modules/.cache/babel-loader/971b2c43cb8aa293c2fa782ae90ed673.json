{"ast":null,"code":"var _jsxFileName = \"/home/hugo/github/Web-Server-Nodejs/Web-Server-Nodejs/ReactLab-04/front-end/src/components/Channel/Channel.js\";\nimport React, { useState } from 'react';\nimport './Channel.css'; //For transforming markdown to html\n\nimport unified from 'unified';\nimport parse from 'remark-parse';\nimport remark2react from 'remark-react';\nimport Messages from '../Messages/Messages'; //Moment.js library - deprecated\n//it's slow\n//it's heavey\n//it's mutable ?\n//it's hard to debug\n//uncomment the following to use moment\n\n/*\nconst moment = require('moment');\nlet val;\nval = moment().format('h:mm, DD-MM-YYYY');\n*/\n//using Luxon instead of Moment.js\n\nconst {\n  DateTime\n} = require('luxon'); //Change Fake Channel with {channel.name}\n\n\nconst MessageForm = ({\n  addMessage\n}) => {\n  const onSubmit = e => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    addMessage({\n      content: data.get('content'),\n      author: 'David',\n      creation: Date.now()\n    });\n    e.target.elements.content.value = '';\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"input\",\n    name: \"content\",\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Send\",\n    className: \"send\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }));\n}; //list of channels\n\n\nvar channel = {\n  name: 'Fake channel'\n};\n\nconst Channel = () => {\n  const [messages, setMessages] = useState([]);\n\n  const addMessage = message => {\n    setMessages([...messages, message]);\n  };\n\n  let today = DateTime.local();\n  let day = today.get('day');\n  let month = today.get('month');\n  let year = today.get('year');\n  let hour = today.get('hour');\n  let minute = today.get('minute'); //A text in markdown\n\n  const someText = \"# Hello world!\";\n  const someText2 = \"*Try markdown with stars before and after your message*\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"channel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Messages, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(MessageForm, {\n    addMessage: addMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport { channel };\nexport default Channel;","map":{"version":3,"sources":["/home/hugo/github/Web-Server-Nodejs/Web-Server-Nodejs/ReactLab-04/front-end/src/components/Channel/Channel.js"],"names":["React","useState","unified","parse","remark2react","Messages","DateTime","require","MessageForm","addMessage","onSubmit","e","preventDefault","data","FormData","target","content","get","author","creation","Date","now","elements","value","channel","name","Channel","messages","setMessages","message","today","local","day","month","year","hour","minute","someText","someText2"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,eAAP,C,CACA;;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AAEA,OAAOC,QAAP,MAAqB,sBAArB,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,MAAM;AAACC,EAAAA;AAAD,IAAaC,OAAO,CAAC,OAAD,CAA1B,C,CAIA;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACjBC,EAAAA;AADiB,CAAD,KAEZ;AACJ,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAaH,CAAC,CAACI,MAAf,CAAb;AACAN,IAAAA,UAAU,CAAC;AACTO,MAAAA,OAAO,EAAEH,IAAI,CAACI,GAAL,CAAS,SAAT,CADA;AAETC,MAAAA,MAAM,EAAE,OAFC;AAGTC,MAAAA,QAAQ,EAAEC,IAAI,CAACC,GAAL;AAHD,KAAD,CAAV;AAKAV,IAAAA,CAAC,CAACI,MAAF,CAASO,QAAT,CAAkBN,OAAlB,CAA0BO,KAA1B,GAAkC,EAAlC;AACD,GATD;;AAUA,sBACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAwB,IAAA,QAAQ,EAAEb,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,SAAzB;AAAmC,IAAA,SAAS,EAAC,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,MAA3B;AAAkC,IAAA,SAAS,EAAC,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMH,CAnBD,C,CAqBA;;;AACA,IAAIc,OAAO,GAAG;AACVC,EAAAA,IAAI,EAAE;AADI,CAAd;;AAIA,MAAMC,OAAO,GAAG,MAAM;AAElB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B3B,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMQ,UAAU,GAAIoB,OAAD,IAAa;AAC5BD,IAAAA,WAAW,CAAC,CACV,GAAGD,QADO,EAEVE,OAFU,CAAD,CAAX;AAIH,GALD;;AAOA,MAAIC,KAAK,GAAGxB,QAAQ,CAACyB,KAAT,EAAZ;AACA,MAAIC,GAAG,GAAEF,KAAK,CAACb,GAAN,CAAU,KAAV,CAAT;AACA,MAAIgB,KAAK,GAAGH,KAAK,CAACb,GAAN,CAAU,OAAV,CAAZ;AACA,MAAIiB,IAAI,GAAGJ,KAAK,CAACb,GAAN,CAAU,MAAV,CAAX;AACA,MAAIkB,IAAI,GAAGL,KAAK,CAACb,GAAN,CAAU,MAAV,CAAX;AACA,MAAImB,MAAM,GAAGN,KAAK,CAACb,GAAN,CAAU,QAAV,CAAb,CAhBkB,CAkBhB;;AACF,QAAMoB,QAAQ,GAAG,gBAAjB;AACA,QAAMC,SAAS,GAAG,yDAAlB;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,WAAD;AAAa,IAAA,UAAU,EAAE7B,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,CA7BD;;AA+BA,SAAQe,OAAR;AACA,eAAeE,OAAf","sourcesContent":["import React, {useState} from 'react';\nimport './Channel.css';\n//For transforming markdown to html\nimport unified from 'unified'\nimport parse from 'remark-parse'\nimport remark2react from 'remark-react'\n\nimport Messages from '../Messages/Messages';\n\n//Moment.js library - deprecated\n//it's slow\n//it's heavey\n//it's mutable ?\n//it's hard to debug\n//uncomment the following to use moment\n/*\nconst moment = require('moment');\nlet val;\nval = moment().format('h:mm, DD-MM-YYYY');\n*/\n\n//using Luxon instead of Moment.js\nconst {DateTime} = require('luxon');\n\n\n\n//Change Fake Channel with {channel.name}\n\nconst MessageForm = ({\n    addMessage\n  }) => {\n    const onSubmit = (e) => {\n      e.preventDefault()\n      const data = new FormData(e.target)\n      addMessage({\n        content: data.get('content'),\n        author: 'David',\n        creation: Date.now(),\n      })\n      e.target.elements.content.value = ''\n    } \n    return (\n      <form className=\"form\"  onSubmit={onSubmit}>\n        <input type=\"input\" name=\"content\" className=\"content\"/>\n        <input type=\"submit\" value=\"Send\" className=\"send\" />\n      </form>\n    )\n}\n\n//list of channels\nvar channel = {\n    name: 'Fake channel',\n};\n\nconst Channel = () => {\n\n    const [messages, setMessages] = useState([])\n\n    const addMessage = (message) => {\n        setMessages([\n          ...messages,\n          message\n        ])\n    }\n\n    let today = DateTime.local();\n    let day =today.get('day');\n    let month = today.get('month');\n    let year = today.get('year');\n    let hour = today.get('hour');\n    let minute = today.get('minute');\n\n      //A text in markdown\n    const someText = \"# Hello world!\";\n    const someText2 = \"*Try markdown with stars before and after your message*\"\n\n\n    return(\n        <div className=\"channel\">\n            <Messages/>\n            <MessageForm addMessage={addMessage} />\n        </div>\n    );\n}\n\nexport {channel};\nexport default Channel;"]},"metadata":{},"sourceType":"module"}