{"ast":null,"code":"var _jsxFileName = \"/home/hugo/github/Web-Server-Nodejs/Web-Server-Nodejs/ReactLab-04/front-end/src/components/Main/Main.js\";\nimport React, { useState } from 'react'; //For transforming markdown to html\n\nimport unified from 'unified';\nimport parse from 'remark-parse';\nimport remark2react from 'remark-react';\nimport './Main.css'; //Moment.js library - deprecated\n//it's slow\n//it's heavey\n//it's mutable ?\n//it's hard to debug\n//uncomment the following to use moment\n\n/*\nconst moment = require('moment');\nlet val;\nval = moment().format('h:mm, DD-MM-YYYY');\n*/\n//using Luxon instead of Moment.js\n\nconst {\n  DateTime\n} = require('luxon');\n\nconst MessageForm = ({\n  addMessage\n}) => {\n  const onSubmit = e => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    addMessage({\n      content: data.get('content'),\n      author: 'David',\n      creation: Date.now()\n    });\n    e.target.elements.content.value = '';\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"input\",\n    name: \"content\",\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Send\",\n    className: \"send\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst Main = () => {\n  var channel = {\n    name: 'Fake channel'\n  };\n  const [messages, setMessages] = useState([]);\n  let today = DateTime.local();\n  let day = today.get('day');\n  let month = today.get('month');\n  let year = today.get('year');\n  let hour = today.get('hour');\n  let minute = today.get('minute'); //A text in markdown\n\n  const someText = \"# Hello world!\";\n  const someText2 = \"*Try markdown with stars before and after your message*\";\n\n  const addMessage = message => {\n    setMessages([...messages, message]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"channels\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"List of the channels:\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, channel.name)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"channel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, \"Connected in the channel: \", channel.name), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"Some text in markdown:\", unified().use(parse).use(remark2react).processSync(someText).result, unified().use(parse).use(remark2react).processSync(someText2).result), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, messages.map((message, i) => /*#__PURE__*/React.createElement(\"li\", {\n    key: i,\n    className: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 37\n    }\n  }, message.author), ' ', /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 37\n    }\n  }, \"(sent a message at \", hour, \":\", minute, \", \", day, \"/\", month, \"/\", year, \"):\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 33\n    }\n  }, unified().use(parse).use(remark2react).processSync(message.content).result))))), /*#__PURE__*/React.createElement(MessageForm, {\n    addMessage: addMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Main;","map":{"version":3,"sources":["/home/hugo/github/Web-Server-Nodejs/Web-Server-Nodejs/ReactLab-04/front-end/src/components/Main/Main.js"],"names":["React","useState","unified","parse","remark2react","DateTime","require","MessageForm","addMessage","onSubmit","e","preventDefault","data","FormData","target","content","get","author","creation","Date","now","elements","value","Main","channel","name","messages","setMessages","today","local","day","month","year","hour","minute","someText","someText2","message","use","processSync","result","map","i"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CACA;;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AAEA,OAAO,YAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,MAAM;AAACC,EAAAA;AAAD,IAAaC,OAAO,CAAC,OAAD,CAA1B;;AAGA,MAAMC,WAAW,GAAG,CAAC;AACjBC,EAAAA;AADiB,CAAD,KAEZ;AACJ,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAaH,CAAC,CAACI,MAAf,CAAb;AACAN,IAAAA,UAAU,CAAC;AACTO,MAAAA,OAAO,EAAEH,IAAI,CAACI,GAAL,CAAS,SAAT,CADA;AAETC,MAAAA,MAAM,EAAE,OAFC;AAGTC,MAAAA,QAAQ,EAAEC,IAAI,CAACC,GAAL;AAHD,KAAD,CAAV;AAKAV,IAAAA,CAAC,CAACI,MAAF,CAASO,QAAT,CAAkBN,OAAlB,CAA0BO,KAA1B,GAAkC,EAAlC;AACD,GATD;;AAUA,sBACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAwB,IAAA,QAAQ,EAAEb,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,SAAzB;AAAmC,IAAA,SAAS,EAAC,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,MAA3B;AAAkC,IAAA,SAAS,EAAC,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAnBH;;AAsBA,MAAMc,IAAI,GAAG,MAAM;AACf,MAAIC,OAAO,GAAG;AACVC,IAAAA,IAAI,EAAE;AADI,GAAd;AAIA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B1B,QAAQ,CAAC,EAAD,CAAxC;AAEA,MAAI2B,KAAK,GAAGvB,QAAQ,CAACwB,KAAT,EAAZ;AACA,MAAIC,GAAG,GAAEF,KAAK,CAACZ,GAAN,CAAU,KAAV,CAAT;AACA,MAAIe,KAAK,GAAGH,KAAK,CAACZ,GAAN,CAAU,OAAV,CAAZ;AACA,MAAIgB,IAAI,GAAGJ,KAAK,CAACZ,GAAN,CAAU,MAAV,CAAX;AACA,MAAIiB,IAAI,GAAGL,KAAK,CAACZ,GAAN,CAAU,MAAV,CAAX;AACA,MAAIkB,MAAM,GAAGN,KAAK,CAACZ,GAAN,CAAU,QAAV,CAAb,CAZe,CAcb;;AACF,QAAMmB,QAAQ,GAAG,gBAAjB;AACA,QAAMC,SAAS,GAAG,yDAAlB;;AAEA,QAAM5B,UAAU,GAAI6B,OAAD,IAAa;AAC5BV,IAAAA,WAAW,CAAC,CACV,GAAGD,QADO,EAEVW,OAFU,CAAD,CAAX;AAID,GALH;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCb,OAAO,CAACC,IADT,CADJ,CADJ,CAFR,CAFJ,eAaI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAA8CD,OAAO,CAACC,IAAtD,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAGQvB,OAAO,GACNoC,GADD,CACKnC,KADL,EAECmC,GAFD,CAEKlC,YAFL,EAGCmC,WAHD,CAGaJ,QAHb,EAGuBK,MAN/B,EASQtC,OAAO,GACNoC,GADD,CACKnC,KADL,EAECmC,GAFD,CAEKlC,YAFL,EAGCmC,WAHD,CAGaH,SAHb,EAGwBI,MAZhC,CAFJ,eAkBI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMd,QAAQ,CAACe,GAAT,CAAc,CAACJ,OAAD,EAAUK,CAAV,kBACZ;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAY,IAAA,SAAS,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOL,OAAO,CAACpB,MAAf,CADJ,EAEK,GAFL,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA0BgB,IAA1B,OAAiCC,MAAjC,QAA2CJ,GAA3C,OAAiDC,KAAjD,OAAyDC,IAAzD,OAHJ,CADJ,eAMI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI9B,OAAO,GACNoC,GADD,CACKnC,KADL,EAECmC,GAFD,CAEKlC,YAFL,EAGCmC,WAHD,CAGaF,OAAO,CAACtB,OAHrB,EAG8ByB,MALlC,CANJ,CADF,CADN,CAlBJ,CADJ,eAwCI,oBAAC,WAAD;AAAa,IAAA,UAAU,EAAEhC,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxCJ,CAbJ,CADJ;AA0DH,CAnFD;;AAoFA,eAAee,IAAf","sourcesContent":["import React, {useState} from 'react';\n//For transforming markdown to html\nimport unified from 'unified'\nimport parse from 'remark-parse'\nimport remark2react from 'remark-react'\n\nimport './Main.css';\n\n//Moment.js library - deprecated\n//it's slow\n//it's heavey\n//it's mutable ?\n//it's hard to debug\n//uncomment the following to use moment\n/*\nconst moment = require('moment');\nlet val;\nval = moment().format('h:mm, DD-MM-YYYY');\n*/\n\n//using Luxon instead of Moment.js\nconst {DateTime} = require('luxon');\n\n\nconst MessageForm = ({\n    addMessage\n  }) => {\n    const onSubmit = (e) => {\n      e.preventDefault()\n      const data = new FormData(e.target)\n      addMessage({\n        content: data.get('content'),\n        author: 'David',\n        creation: Date.now(),\n      })\n      e.target.elements.content.value = ''\n    } \n    return (\n      <form className=\"form\"  onSubmit={onSubmit}>\n        <input type=\"input\" name=\"content\" className=\"content\" />\n        <input type=\"submit\" value=\"Send\" className=\"send\" />\n      </form>\n    )\n  }\n\n\nconst Main = () => {\n    var channel = {\n        name: 'Fake channel',\n    }\n\n    const [messages, setMessages] = useState([])\n\n    let today = DateTime.local();\n    let day =today.get('day');\n    let month = today.get('month');\n    let year = today.get('year');\n    let hour = today.get('hour');\n    let minute = today.get('minute');\n\n      //A text in markdown\n    const someText = \"# Hello world!\";\n    const someText2 = \"*Try markdown with stars before and after your message*\"\n\n    const addMessage = (message) => {\n        setMessages([\n          ...messages,\n          message\n        ])\n      }\n\n    return(\n        <div className=\"main\">\n\n            <div className=\"channels\">\n                <h5 align=\"center\">List of the channels:</h5>\n                    <div>\n                        <ul>\n                            <li>\n                            {channel.name}\n                            </li>\n                        </ul>\n                    </div>\n            </div>\n\n            <div className=\"channel\">\n                <div className=\"messages\">\n                    <h1 align=\"center\">Connected in the channel: {channel.name}</h1>\n                    <div>\n                        Some text in markdown:\n                        {\n                            unified()\n                            .use(parse)\n                            .use(remark2react)\n                            .processSync(someText).result\n                        }\n                        {\n                            unified()\n                            .use(parse)\n                            .use(remark2react)\n                            .processSync(someText2).result\n                        }\n                    </div>\n\n                    <div className=\"chatMessage\">\n                        { messages.map( (message, i) => (\n                            <li key={i} className=\"message\">\n                                <p>\n                                    <span>{message.author}</span>\n                                    {' '}\n                                    <span>(sent a message at {hour}:{minute}, {day}/{month}/{year}):</span>\n                                </p>\n                                <div className=\"chatMessage\">\n                                {\n                                    unified()\n                                    .use(parse)\n                                    .use(remark2react)\n                                    .processSync(message.content).result\n                                }\n                                </div>\n                            </li>\n                        ))}\n                    </div>\n\n                </div>\n                <MessageForm addMessage={addMessage} />\n            </div>\n        </div>\n    );\n}\nexport default Main;"]},"metadata":{},"sourceType":"module"}