{"ast":null,"code":"var _jsxFileName = \"/home/hugo/github/Web-Server-Nodejs/Web-Server-Nodejs/ReactLab-04/front-end/src/components/Channel/Channel.js\";\nimport React from 'react'; //For transforming markdown to html\n\nimport unified from 'unified';\nimport parse from 'remark-parse';\nimport remark2react from 'remark-react';\nimport './Channel.css'; //Change Fake Channel with {channel.name}\n\nconst MessageForm = ({\n  addMessage\n}) => {\n  const onSubmit = e => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    addMessage({\n      content: data.get('content'),\n      author: 'David',\n      creation: Date.now()\n    });\n    e.target.elements.content.value = '';\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"input\",\n    name: \"content\",\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Send\",\n    className: \"send\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst Channel = () => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"channel\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"messages\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"h1\", {\n  align: \"center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }\n}, \"Connected in the channel: \", channel.name), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }\n}, \"Some text in markdown:\", unified().use(parse).use(remark2react).processSync(someText).result, unified().use(parse).use(remark2react).processSync(someText2).result), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"chatMessage\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }\n}, messages.map((message, i) => /*#__PURE__*/React.createElement(\"li\", {\n  key: i,\n  className: \"message\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 21\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 25\n  }\n}, message.author), ' ', /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 25\n  }\n}, \"(sent a message at \", hour, \":\", minute, \", \", day, \"/\", month, \"/\", year, \"):\")), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"chatMessage\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 21\n  }\n}, unified().use(parse).use(remark2react).processSync(message.content).result))))), /*#__PURE__*/React.createElement(MessageForm, {\n  addMessage: addMessage,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }\n}));\n\nexport default Channel;","map":{"version":3,"sources":["/home/hugo/github/Web-Server-Nodejs/Web-Server-Nodejs/ReactLab-04/front-end/src/components/Channel/Channel.js"],"names":["React","unified","parse","remark2react","MessageForm","addMessage","onSubmit","e","preventDefault","data","FormData","target","content","get","author","creation","Date","now","elements","value","Channel","channel","name","use","processSync","someText","result","someText2","messages","map","message","i","hour","minute","day","month","year"],"mappings":"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","sourcesContent":["import React from 'react';\n//For transforming markdown to html\nimport unified from 'unified'\nimport parse from 'remark-parse'\nimport remark2react from 'remark-react'\n\nimport './Channel.css';\n\n//Change Fake Channel with {channel.name}\n\nconst MessageForm = ({\n    addMessage\n  }) => {\n    const onSubmit = (e) => {\n      e.preventDefault()\n      const data = new FormData(e.target)\n      addMessage({\n        content: data.get('content'),\n        author: 'David',\n        creation: Date.now(),\n      })\n      e.target.elements.content.value = ''\n    } \n    return (\n      <form className=\"form\"  onSubmit={onSubmit}>\n        <input type=\"input\" name=\"content\" className=\"content\" />\n        <input type=\"submit\" value=\"Send\" className=\"send\" />\n      </form>\n    )\n}\n\n\n\n\nconst Channel = () => (\n    <div className=\"channel\">\n    <div className=\"messages\">\n        <h1 align=\"center\">Connected in the channel: {channel.name}</h1>\n        <div>\n            Some text in markdown:\n            {\n                unified()\n                .use(parse)\n                .use(remark2react)\n                .processSync(someText).result\n            }\n            {\n                unified()\n                .use(parse)\n                .use(remark2react)\n                .processSync(someText2).result\n            }\n        </div>\n\n        <div className=\"chatMessage\">\n            { messages.map( (message, i) => (\n                <li key={i} className=\"message\">\n                    <p>\n                        <span>{message.author}</span>\n                        {' '}\n                        <span>(sent a message at {hour}:{minute}, {day}/{month}/{year}):</span>\n                    </p>\n                    <div className=\"chatMessage\">\n                    {\n                        unified()\n                        .use(parse)\n                        .use(remark2react)\n                        .processSync(message.content).result\n                    }\n                    </div>\n                </li>\n            ))}\n        </div>\n        \n    </div>\n    <MessageForm addMessage={addMessage} />\n</div>\n)\n\nexport default Channel;"]},"metadata":{},"sourceType":"module"}