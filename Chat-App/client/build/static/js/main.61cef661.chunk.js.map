{"version":3,"sources":["components/Chat/Chat.js","components/Join/Join.js","App.js","index.js"],"names":["socket","Join","useState","name","setName","room","setRoom","className","placeholder","type","onChange","event","target","value","onClick","preventDefault","to","Chat","location","ENDPOINT","useEffect","queryString","parse","search","io","emit","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"6GAWIA,E,sDCkBWC,G,MAtBF,WAAM,MAISC,mBAAS,IAJlB,mBAIRC,EAJQ,KAIFC,EAJE,OAMSF,mBAAS,IANlB,mBAMRG,EANQ,KAMFC,EANE,KAQf,OACI,qBAAKC,UAAU,qBAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,oBAAIA,UAAU,UAAd,kBACA,8BAAK,uBAAOC,YAAY,OAAOD,UAAU,YAAYE,KAAK,OAAOC,SAAU,SAACC,GAAD,OAASP,EAAQO,EAAMC,OAAOC,YACzG,8BAAK,uBAAOL,YAAY,OAAOD,UAAU,kBAAkBE,KAAK,OAAOC,SAAU,SAACC,GAAD,OAASL,EAAQK,EAAMC,OAAOC,YAC/G,cAAC,IAAD,CAAMC,QAAS,SAAAH,GAAK,OAAMR,GAASE,EAAiC,KAAzBM,EAAMI,kBAAyBC,GAAE,qBAAgBb,EAAhB,iBAA6BE,GAAzG,SACI,wBAAQE,UAAU,eAAeE,KAAK,SAAtC,8B,kCDyBLQ,EAlCF,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EACDhB,mBAAS,IADR,mBACZE,GADY,aAEDF,mBAAS,IAFR,mBAEZI,GAFY,WAGnBa,EAAW,iBA0BjB,OAxBAC,qBAAU,WAAI,MAIWC,IAAYC,MAAMJ,EAASK,QAAzCpB,EAJG,EAIHA,KAAME,EAJH,EAIGA,KAGbL,EAASwB,IAAGL,GAIZf,EAAQD,GACRG,EAAQD,GAGRL,EAAOyB,KAAK,OAAQ,CAACtB,OAAME,WAO5B,CAACc,EAAUD,EAASK,SAGnB,uCEtBOG,EATH,WACR,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW5B,IACjC,cAAC,IAAD,CAAO0B,KAAK,QAAQE,UAAWZ,QCRvCa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.61cef661.chunk.js","sourcesContent":["/*\n    useEffect with Hooks that let us use lifecycle method\n    or side effects in function components\n*/\nimport React, {useState, useEffect} from 'react';\n\n//module that will help us retrieving data from url\nimport queryString from 'query-string';\n\nimport io from 'socket.io-client';\n\nlet socket;\n\nconst Chat = ({location}) => {\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const ENDPOINT = 'localhost:5000';\n\n    useEffect(()=>{\n        //We get the url of the page\n        //location.search gives us ?name=blabla&room=room\n        //queryString gives us an object with the name and the room\n        const {name, room} = queryString.parse(location.search);\n        \n        //passing endpoint\n        socket = io(ENDPOINT);\n\n        //put the name and room of the previous const\n        //in the name and room above the useffect method\n        setName(name);\n        setRoom(room);\n\n        //emitting a socket that we can retrieve from index.js of server\n        socket.emit('join', {name, room});\n\n        //at the end we add an array to the useEffect method\n        //because if present, effect will only activate \n        //if the values in the list change\n        //otherwise we will have 2 connections and 2 \n        //disconnections for each user\n    }, [ENDPOINT, location.search]);\n\n    return (\n        <h1>Chat</h1>\n    )\n}\n\nexport default Chat;","//useState is from hooks\nimport React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\n\n//importing css\nimport './Join.css';\n\nconst Join = () => {\n    //hooks here : variable name, function setName\n    //passing it an empty string as initial value for our\n    //name state\n    const [name, setName] = useState('');\n    //same for the room\n    const [room, setRoom] = useState('');\n\n    return (\n        <div className=\"joinOuterContainer\">\n            <div className=\"joinInnerContainer\">\n                <h1 className=\"heading\">Join</h1>\n                <div><input placeholder=\"Name\" className=\"joinInput\" type=\"text\" onChange={(event)=>setName(event.target.value)}></input></div>\n                <div><input placeholder=\"Room\" className=\"joinInput mt-20\" type=\"text\" onChange={(event)=>setRoom(event.target.value)}></input></div>\n                <Link onClick={event => (!name || !room) ? event.preventDefault() : null} to={`/chat?name=${name}&room=${room}`}>\n                    <button className=\"button mt-20\" type=\"submit\">Sign In</button>\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default Join;","import React from 'react';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\n//Get Join and Chat from the components folder\nimport Join from './components/Join/Join';\nimport Chat from './components/Chat/Chat';\n\n//When the user comes to the page (/)\n//He will be greeted with our Join component\n//He will pass his data in the login form \n//And with a query string we will pass a data to the Chat\nconst App = () => {\n    return (\n      <Router>\n        <Route path=\"/\" exact component={Join} />\n        <Route path=\"/chat\" component={Chat} />\n      </Router>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n//need for react applications\n//We have a div in public/index.html\n//Every code that we write will be injected in the div\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}